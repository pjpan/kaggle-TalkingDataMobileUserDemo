library(xgboost)
library(mxnet)
library(dplyr)
library(data.table)
# app_events;
cat("load data")
app_events <- fread('./input/app_events.csv', integer64 = "character")  # the same event_id has muti app_id
events <- fread('./input/events.csv', integer64 = "character") # event_id is unique
app_labels <- fread('./input/app_labels.csv', integer64 = "character")  # each app_id has it's unique label
label_categories <- fread('./input/label_categories.csv', integer64 = "character") # ecah label has its unique category
gender_age_train <- fread('./input/gender_age_train.csv', integer64 = "character")
gender_age_test <- fread('./input/gender_age_test.csv', integer64 = "character")
phone_brand_device <- fread('./input/phone_brand_device_model.csv', integer64 = "character")
setkey(app_labels, label_id)
setkey(label_categories, label_id)
# combine applabel and label categories
app_labels_detail <- left_join(app_labels, label_categories, copy = F)
rm(app_labels, label_categories, product_descriptions)
gc()
# app_label_detail the same app_id has tow label_id
head(app_labels_detail, 1000)
#
library(ggplot2)
library(ggthemes)
library(lubridate)
ggplot()+geom_bar(aes(phone_brand_device$phone_brand))+theme_economist()
# feature engineering
cat("feature engineering")
device_logintime <- events[, .N, by = device_id]  # device login times
appid_category_group <- app_labels_detail[, .(action = paste0(category, collapse = ";")), by = app_id]
# change timestamp to year,month,day,weekofday,hour
events <- events%>%mutate(timestamp = ymd_hms(timestamp)
,year = year(timestamp)
,month = month(timestamp)
,day = day(timestamp)
,weekofday = weekdays(timestamp)
,hour = hour(timestamp))
install.packages("plot")
install.packages("plotly")
library(plotly)
data(canada.cities, package = "maps")
viz <- ggplot(canada.cities, aes(long, lat)) +
borders(regions = "canada") +
coord_equal() +
geom_point(aes(text = name, size = pop), colour = "red", alpha = 1/2)
ggplotly(viz)
viz
library(maps)
map('world', fill = TRUE, col = 1:10)
theme_set(theme_bw())
ggmap(hdf, extent = "device") +
geom_point(aes(x = lon, y = lat, colour = class), data = chkpts, alpha = .5)
library(ggmap)
theme_set(theme_bw())
ggmap(hdf, extent = "device") +
geom_point(aes(x = lon, y = lat, colour = class), data = chkpts, alpha = .5)
library(ggmap)
theme_set(theme_bw())
hdf <- get_map()
ggmap(hdf, extent = "device") +
geom_point(aes(x = lon, y = lat, colour = class), data = chkpts, alpha = .5)
data(canada.cities, package = "maps")
head(canada.cities)
geocode("beijing")
geocode("China")
df <- data.frame(
address = c("1600 Pennsylvania Avenue, Washington DC", "", "houston texas"),
stringsAsFactors = FALSE
)
## Not run:  # Server response can be slow; this cuts down check time.
mutate_geocode(df, address)
library(dplyr)
df %>% mutate_geocode(address)
gc <- geocode('baylor university')
gc <- geocode('baylor university')
gc
LonLat2XY(gc$lon, gc$lat, 10)
( gc <- as.numeric(geocode('Baylor University')) )
revgeocode(gc)
revgeocode(gc, output = 'more')
revgeocode(gc, output = 'all')
geocodeQueryCheck()
gc
gc <- as.numeric(geocode('Beijing'))
gc
revgeocode(gc)
devicephone <- phone_brand_device[,.N,keyby='device_id']
devicephone%>%filter(N>1)%>%View()
devicephone <- phone_brand_device[,list(N=.N, devicemodels = paste0(device_model,collapse = ";")),keyby='device_id']
devicephone%>%filter(N>1)%>%View()
filter(phone_brand_device=='1752662242799910620')
phone_brand_device%>%filter(device_id=='1752662242799910620')
devicephone <- phone_brand_device%>%distinct()%>%phone_brand_device[,list(N=.N, devicemodels = paste0(device_model,collapse = ";")),keyby='device_id']
phone_brand_device_ <- phone_brand_device%>%distinct()
devicephone <- phone_brand_device_[,list(N=.N, devicemodels = paste0(device_model,collapse = ";")),keyby='device_id']
devicephone%>%filter(N>1)%>%View()
phone_brand_device%>%filter(device_id=='5245428108336915020')
devicephone <- phone_brand_device_[,list(N=.N,
devicemodels = paste0(device_model,collapse = ";"),
devicebrands= paste0(phone_brand,collapse = ";")),keyby='device_id']
devicephone%>%filter(N>1)%>%View()
gender_age_test$gender <- NULL
gender_age_test$age <- NULL
gender_age_test$group <- NULL
gender_age_test$type <- "test"
gender_age_train$type <- "train"
gender_age_test$gender <- NA
gender_age_test$age <- NA
gender_age_test$group <- NA
gender_age_test$type <- NULL
gender_age_test$type <- "test"
gender_age_all <- bind_rows(gender_age_train, gender_age_test)
rm(gender_age_train, gender_age_test)
gc()
rm(canada.cities)
rm(phone_brand_device)
rm(df,gc)
rm(viz)
uidslist
uid_eid <- readRDS("./data/uid_eid.rds")
setwd('/Users/ppj/Documents/CORP/OP_fashionicon')
uid_eid <- readRDS("./data/uid_eid.rds")
uids <- table(uid_info$uid)
uidslist <- names(sort(uids, decreasing = TRUE))
readRDS("./data/uid_eid.rds")
uids <- table(uid_info$uid)
uid_eid <- readRDS("./data/uid_eid.rds")
fluidRow
fluidRow
library(shiny)
shiny::runApp('Shinyapp')
install.packages("shinythemes")
library(shiny)
library(data.table)
library(DT)
library(shinythemes)
library(plotly)
library(viridis)
shiny::runApp('Shinyapp')
str(uid_eid)
uids <- table(uid_eid$uid)
uids
uidslist <- names(sort(uids, decreasing = TRUE))
uidslist
shiny::runApp('Shinyapp')
shiny::runApp('Shinyapp')
head(gender_age_all[devicephone])
gender_age_all <- data.table(bind_rows(gender_age_train, gender_age_test))
gender_age_all <- data.table(gender_age_all)
head(gender_age_all[devicephone])
names(gender_age_all)
names(devicephone)
head(gender_age_all[devicephone])
setkey(gender_age_all, device_id)
setkey(devicephone, device_id)
head(gender_age_all[devicephone])
gender_age_all_addbrand <- gender_age_all[devicephone]
gender_age_all_addbrand%>%filter(type=='train')%>%ggplot()+geom_count(aes(x= devicemodels,y=group))
gender_age_all_addbrand%>%filter(type=='train')%>%ggplot()+geom_bar(aes(x= devicemodels))+facet_grid(~group)
gender_age_all_addbrand%>%filter(type=='train')%>%ggplot()+geom_area(aes(y= devicemodels))+facet_grid(~group)
gender_age_all_addbrand%>%filter(type=='train')%>%head(10)
gender_age_all_addbrand%>%filter(type=='train')%>%ggplot()+geom_area(aes(y= devicebrands))+facet_grid(~group)
gender_age_all_addbrand%>%filter(type=='train')%>%ggplot()+geom_area(aes(y= devicebrands))
gender_age_all_addbrand%>%filter(type=='train')%>%ggplot()+geom_bar(aes(x= group,y=devicebrands))
dev.off()
gender_age_all_addbrand%>%filter(type=='train')%>%ggplot()+geom_bar(aes(x= group,y=devicebrands))
gender_age_all_addbrand%>%filter(type=='train')%>%count(devicebrands, group)
gender_age_all_addbrand%>%filter(type=='train')%>%count(devicebrands, group)%>%mutate(pct=n/sum(n))
gender_age_all_addbrand%>%
filter(type=='train')%>%
count(devicebrands, group)%>%
mutate(pct=n/sum(n))%>%
ggplot()+geom_tile(aes(x=devicebrands, y = group, fill = n))+coord_equal()
gender_age_all_addbrand%>%
filter(type=='train')%>%
count(devicebrands, group)%>%
mutate(pct=n/sum(n))%>%
ggplot()+geom_tile(aes(x=devicebrands, y = group, fill = n))+coord_equal()%>%
scale_fill_gradient(low="#006400",high="#FF0000", name="热度")
devicebrands
gender_age_all_addbrand%>%
filter(type=='train')%>%
count(devicebrands, group)%>%
mutate(pct=n/sum(n))%>%
ggplot()+geom_tile(aes(x=devicebrands, y = group, fill = n))+coord_equal()
gender_age_all_addbrand%>%
filter(type=='train')%>%
count(devicebrands, group)%>%
mutate(pct=n/sum(n))%>%
ggplot()+geom_tile(aes(x=devicebrands, y = group, fill = n))+coord_equal()%>%
plotly()
library(readr)
data<-read.table('/Volumes/KINGSTON/qunar1601.txt', header=TRUE, sep='\t', na.strings='NA')
summary(data)
data<-read.table('/Volumes/KINGSTON/qunar1601.txt', header=TRUE, sep='\t', na.strings='NULL')
summary(data)
data<-read_tsv('/Volumes/KINGSTON/qunar1601.txt', header=TRUE, na='NULL')
data<-read_tsv('/Volumes/KINGSTON/qunar1601.txt', na='NULL')
summary(data)
colnames(data)
data<-read_tsv('/Volumes/KINGSTON/qunar1601.txt', col_names=TRUE, col_types=c('c','i','i','c','i','i','i','i','i','i','i','i','i','i','i','i','i','i'), na='NULL')
data<-read_tsv('/Volumes/KINGSTON/qunar1601.txt', col_names=TRUE, col_types=list('c','i','i','c','i','i','i','i','i','i','i','i','i','i','i','i','i','i'), na='NULL')
data<-read_tsv('/Volumes/KINGSTON/qunar1601.txt', col_names=TRUE, col_types=list(cols('c','i','i','c','i','i','i','i','i','i','i','i','i','i','i','i','i','i')), na='NULL')
data<-read_tsv('/Volumes/KINGSTON/qunar1601.txt', col_names=TRUE,
col_types=cols(hotel_seq='c',rank='i',rank2='i',checkinmonth='c',holidays='i',province='i',city='i',zone='i',star='i'
,predquantity='i',upper='i',lower='i',cii_htlq='i',cii_htlq_last='i',ord_htlq='i',cii_zoneq='i',cii_zoneq_last='i',ord_zoneq='i'),
na='NULL')
summary(data)
system.time(data<-read_tsv('/Volumes/KINGSTON/qunar1601.txt', col_names=TRUE,
col_types=cols(hotel_seq='c',rank='i',rank2='i',checkinmonth='c',holidays='i',province='i',city='i',zone='i',star='i'
,predquantity='i',upper='i',lower='i',cii_htlq='i',cii_htlq_last='i',ord_htlq='i',cii_zoneq='i',cii_zoneq_last='i',ord_zoneq='i'),
na='NULL'))
system.time(data<-read.table('/Volumes/KINGSTON/qunar1601.txt', header=TRUE, sep='\t', na.strings='NULL'))
system.time(data<-fread('/Volumes/KINGSTON/qunar1601.txt', header=TRUE, sep='\t', na.strings='NULL'))
system.time(data<-fread('/Volumes/KINGSTON/qunar1601.txt', header=TRUE, sep='\t', na.strings='NULL'))
rm(data)
gender_age_all_addbrand%>%
filter(type=='train')%>%
count(devicebrands, group)%>%
mutate(pct=n/sum(n))%>%
ggplot()+geom_tile(aes(x=devicebrands, y = group, fill = n))+coord_equal()
library(xgboost)
library(dplyr)
library(data.table)
library(plotly)
library(maps)
gender_age_all_addbrand%>%
filter(type=='train')%>%
count(devicebrands, group)%>%
mutate(pct=n/sum(n))%>%
ggplot()+geom_tile(aes(x=devicebrands, y = group, fill = n))+coord_equal()
gender_age_all_addbrand%>%
filter(type=='train')%>%
count(devicebrands, group)%>%
mutate(pct=n/sum(n))%>%
ggplot()+geom_tile(aes(x= group, y = devicebrands, fill = n))+coord_equal()
gender_age_all_addbrand%>%count(phone_brand)%>%mutate(pct/n/sum(n))
gender_age_all_addbrand%>%count(devicebrands)%>%mutate(pct/n/sum(n))%>%head(30)
gender_age_all_addbrand%>%count(devicebrands)%>%mutate(pct=n/sum(n))%>%head(30)
top30_brands <- gender_age_all_addbrand%>%count(devicebrands)%>%mutate(pct = n/sum(n))%>%head(30)
gender_age_all_addbrand%>%
filter(type=='train', devicebrands%in%top30_brands$devicebrands)%>%
count(devicebrands, group)%>%
mutate(pct=n/sum(n))%>%
ggplot()+geom_tile(aes(x= group, y = devicebrands, fill = n))+coord_equal()
install.packages("d3heatmap")
install.packages("plotly")
keyword = "餐馆"
key = "" ### 请前往此处申请key: http://lbsyun.baidu.com/apiconsole/key?application=key
city = "长沙"
page_size = 20
page_num = 0
total = 20
placeIDSet = name = lat = lng = address = NULL
while(page_num <= ceiling(total/page_size)-1){
searchURL = paste("http://api.map.baidu.com/place/v2/search?q=",
keyword,
"&scope=",1,
"&page_num=",page_num,
"&page_size=",page_size,
"&region=",city,
"&output=json",
"&ak=",key,
sep="")
result = getURL(url = searchURL,ssl.verifypeer = FALSE)
}
library(WriteXLS)
library(rjson)
library(RCurl)
keyword = "餐馆"
key = "" ### 请前往此处申请key: http://lbsyun.baidu.com/apiconsole/key?application=key
city = "长沙"
page_size = 20
page_num = 0
total = 20
placeIDSet = name = lat = lng = address = NULL
searchURL = paste("http://api.map.baidu.com/place/v2/search?q=",
keyword,
"&scope=",1,
"&page_num=",page_num,
"&page_size=",page_size,
"&region=",city,
"&output=json",
"&ak=",key,
sep="")
result = getURL(url = searchURL,ssl.verifypeer = FALSE)
head(result)
x = fromJSON(result)
total = x$total
x
get_googlemap
library(ggmap)
get_googlemap
geocode("上海")
geocode("安庆")
gc <- as.numeric(geocode('Baylor University'))
revgeocode(gc)
gc
( gc <- as.numeric(geocode('Baylor University')) )
revgeocode(gc, output = 'all')
